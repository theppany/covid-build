{"version":3,"sources":["Pages/ContactPanel/ContactPanel.js","components/ImageCredit/ImageCredit.js","components/PanelItem/PanelItem.js","Pages/SpreadPreventPanel/SpreadPreventPanel.js","Pages/SymptomsPanel/SymptomPanel.js","Pages/PanelPage/PanelPage.js","utils/Numbers.js","components/TreatmentCount/TreatmentCount.js","components/HospitalGrid/HospitalGrid.js","components/LastUpdate/LastUpdate.js","components/TwitterWidget/TwitterWidget.js","Pages/HospitalPanel/HospitalPanel.js","components/Message/Message.js","components/QAPanel/QAPanel.js","components/Card/Card.js","Pages/CardPanel/CardPanel.js","components/DistrictGrid/DistrictGrid.js","Pages/DistrictPanel/DistrictPanel.js","Pages/DistrictMapPanel/DistrictMapPanel.js","components/PatientChart/PatientChart.js","components/AgeChart/AgeChart.js","components/GenderChart/GenderChart.js","Pages/ChartPanel/ChartPanel.js","App.js","utils/Strings.js","serviceWorker.js","index.js"],"names":["Title","Typography","Text","ContactPanel","className","href","ImageCredit","style","marginTop","PanelItem","title","text","image","sm","span","xs","md","textAlign","src","alt","width","marginBottom","level","SpreadPreventPanel","margin","SymptomPanel","offset","lg","PanelPage","formatNumber","num","toString","replace","TreatmentCount","cumulative","type","treatment","HospitalGrid","data","useState","index","setIndex","displayData","slice","defaultCurrent","total","pageSize","onChange","val","map","item","name","hospital","titleNode","placement","cumulativeLocal","cumulative_local","treatmentLocal","treatment_local","cumulativeForeign","cumulative_foreign","treatmentForeign","treatment_foreign","key","hospital_id","marginRight","LastUpdate","updated","color","fontSize","TwitterWidget","border","sourceType","screenName","options","height","HospitalPanel","hospitalData","lastUpdatedAt","formattedDate","moment","format","Message","message","icon","children","messageStyle","background","padding","borderRadius","minHeight","messageData","paddingLeft","InfoCircleFilled","Panel","Collapse","QAPanel","defaultActiveKey","header","display","Card","value","newStatus","size","toLowerCase","CardPanel","lastUpdate","cardData","fontWeight","Group","defaultValue","buttonStyle","Button","main","newText","fontsize","inHospital","other","quarantine_centers","foreigners","countries","DistrictGrid","southern","central","northern","forEach","province","push","provincialData","Object","entries","patient_count","v","toUpperCase","DistrictPanel","districtData","updatedDate","DistrictData","DistrictMapPanel","lat","lng","center","zoom","COLORS","patientCountsNormalized","patientCounts","max","Math","min","round","normalizePatientData","districtColors","draggable","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","i","geoLocation","PatientChart","updatedAt","config","visible","description","forceFit","xField","yField","label","point","xAxis","tickCount","AgeChart","yAxis","meta","age","alias","count","formatter","fill","opacity","tooltip","GenderChart","chartData","radius","responsive","angleField","colorField","legend","offsetX","ChartPanel","patientChartData","ageChartData","patientDataUpdatedAt","ageDataUpdatedAt","genderChartData","Header","Layout","Content","Footer","App","isLoading","setIsLoading","isError","setError","isErrorCountryData","setErrorCountryData","isLocal","setIsLocal","update_date_time","local_new_cases","local_total_cases","local_deaths","local_new_deaths","local_recovered","local_total_number_of_individuals_in_hospitals","global_new_cases","global_total_cases","global_deaths","global_new_deaths","global_recovered","state","setState","setHospitalData","setPatientChartData","setDistrictData","otherData","setOtherData","countryDataUpdatedDate","setCountryDataUpdatedDate","byGenderData","setByGenderData","countriesReported","setCountriesReported","setAgeChartData","setPatientDataUpdatedAt","useEffect","fetchData","fetchCountryData","a","fetch","response","ok","Error","statusText","json","district_data","other_data","updated_at","genderData","by_gender","countries_reported","by_age","ageData","keys","callback","then","sriLankaData","obj","date","objDate","recovered","isBefore","confirmed","lastItem","splice","length","catch","_","hospital_data","getStatusText","faAmbulance","faBed","faWalking","target","justify","admitted","status","subTitle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.e8c4010b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport \"./ContactPanel.css\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst ContactPanel = () => {\r\n    return (\r\n            <div className=\"important-contacts\">\r\n                <Title>Developer Contacts</Title>\r\n                <div className=\"contacts\">\r\n                    <div>\r\n                        <Text>Contact Name: Theppany Thienkhanh</Text>\r\n                    </div>\r\n                    <div>\r\n                        <Text>Phone: 020 5555 9987, 020 9888 8700</Text>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <Text>Backend: <a href=\"http://119.59.103.158/admin\">http://119.59.103.158/admin</a></Text>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <Text>Endpoint Api: <a href=\"http://119.59.103.158/api-explorer\">http://119.59.103.158/api-explorer</a></Text>\r\n                    </div>\r\n            \r\n                    <div>\r\n                        <Text>Addresss: Dongdok Road, Unit 24, House No. 307, Xaythany District, Vientaine Captital, Laos PDR.</Text>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <Text>Power By: <a href=\"https://dhanushka.dev\">Dhanushka</a></Text>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n};\r\n\r\nexport default ContactPanel;\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst {Text} = Typography;\r\n\r\nconst ImageCredit = () => {\r\n    return (\r\n         \r\n        <div style={{marginTop: \"50px\"}}>\r\n            \r\n        </div> \r\n        \r\n    );\r\n};\r\n\r\nexport default ImageCredit;\r\n","import React from \"react\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst style = {\r\n    marginTop: \"20px\"\r\n};\r\n\r\nconst PanelItem = ({title, text, image}) => {\r\n    return (\r\n        <Row style={style}>\r\n            <Col sm={{span: 24}} xs={{span: 24}} md={{span: 3}}>\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <img src={image} alt=\"\" style={{width: \"80%\", marginBottom: \"20px\"}}/>\r\n                </div>\r\n            </Col>\r\n            <Col sm={{span: 24}} xs={{span: 24}} md={{span: 20}}>\r\n                <Title level={4}>{title}</Title>\r\n                <Text>{text}</Text>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PanelItem;\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport PanelItem from \"../../components/PanelItem/PanelItem\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst SpreadPreventPanel = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div style={{margin: \"20px 0\"}}><Title level={2}>Steps to help prevent the spread of COVID-19 if you\r\n                    are sick</Title></div>\r\n                <PanelItem title=\"Stay home except to get medical care\"\r\n                           text=\"People who are mildly ill with COVID-19 are able to recover at home. Do not leave, except to get medical care. Do not visit public areas. Avoid using public transportation, ride-sharing, or taxis. Call before you get medical care. Be sure to get care if you feel worse or you think it is an emergency.\"\r\n                           image=\"https://www.cdc.gov/coronavirus/2019-ncov/images/COVIDweb_02_bed.png\"/>\r\n                <PanelItem title=\"Cover your coughs and sneezes\"\r\n                           text=\"Cover your mouth and nose with a tissue when you cough or sneeze. Throw used tissues in a lined trash can. Immediately wash your hands with soap and water for at least 20 seconds. If soap and water are not available, clean your hands with an alcohol-based hand sanitizer that contains at least 60% alcohol.\"\r\n                           image=\"https://www.cdc.gov/coronavirus/2019-ncov/images/COVIDweb_06_coverCough.png\"/>\r\n                <PanelItem title=\"Clean your hands often\"\r\n                           text=\"Wash your hands often with soap and water for at least 20 seconds. This is especially important after blowing your nose, coughing, or sneezing; going to the bathroom; and before eating or preparing food. Avoid touching your eyes, nose, and mouth with unwashed hands.  Soap and water are the best option, especially if hands are visibly dirty.\"\r\n                           image=\"https://www.cdc.gov/coronavirus/2019-ncov/images/COVIDweb_07_wash.png\"/>\r\n                <PanelItem title=\"Clean all “high-touch” surfaces everyday\"\r\n                           text=\"Clean high-touch surfaces in your isolation area (“sick room” and bathroom) every day; let a caregiver clean and disinfect high-touch surfaces in other areas of the home. High-touch surfaces include phones, remote controls, counters, tabletops, doorknobs, bathroom fixtures, toilets, keyboards, tablets, and bedside tables.\"\r\n                           image=\"https://www.cdc.gov/coronavirus/2019-ncov/images/COVIDweb_09_clean.png\"/>\r\n            </div>\r\n            <div className=\"more-details\"><Text>For more details check <a\r\n                href=\"https://www.cdc.gov/coronavirus/2019-ncov/if-you-are-sick/steps-when-sick.html\">this\r\n                link.</a></Text>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SpreadPreventPanel;\r\n","import React from \"react\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nconst SymptomPanel = () => {\r\n    const title = <Title>Main Symptoms</Title>;\r\n    return (\r\n        <div>\r\n            {title}\r\n            <Text>These are the most common symptoms of COVID-19. Some people become infected but don’t develop\r\n                any symptoms and don't feel unwell. Most people (about 80%) recover from the disease without\r\n                needing special treatment.</Text>\r\n            <div>\r\n                <Row>\r\n                    <Col style={{textAlign: \"center\", marginTop: \"30px\"}} xs={{span: 16, offset: 4}}\r\n                         sm={{span: 24}} md={{span: 7, offset: 1}}\r\n                         lg={{span: 6}}>\r\n                        <img src=\"http://hpb.health.gov.lk/media/feature/1.png\" alt=\"\" style={{width: \"75%\"}}/>\r\n                        <Title level={3}>Fever</Title>\r\n                    </Col>\r\n                    <Col style={{textAlign: \"center\", marginTop: \"30px\"}} xs={{span: 16, offset: 4}}\r\n                         sm={{span: 24}} md={{span: 7, offset: 1}}\r\n                         lg={{span: 6}}>\r\n                        <img src=\"http://hpb.health.gov.lk/media/feature/2.png\" alt=\"\" style={{width: \"75%\"}}/>\r\n                        <Title level={3}>Cough and sneezes</Title>\r\n                    </Col>\r\n                    <Col style={{textAlign: \"center\", marginTop: \"30px\"}} xs={{span: 16, offset: 4}}\r\n                         sm={{span: 24}} md={{span: 7, offset: 1}}\r\n                         lg={{span: 6}}>\r\n                        <img src=\"http://hpb.health.gov.lk/media/feature/3.png\" alt=\"\" style={{width: \"75%\"}}/>\r\n                        <Title level={3}>Sore throat</Title>\r\n                    </Col>\r\n                    <Col style={{textAlign: \"center\", marginTop: \"30px\"}} xs={{span: 16, offset: 4}}\r\n                         sm={{span: 24}} md={{span: 7, offset: 1}}\r\n                         lg={{span: 6}}>\r\n                        <img src=\"http://hpb.health.gov.lk/media/feature/4.png\" alt=\"\" style={{width: \"75%\"}}/>\r\n                        <Title level={3}>Sneezing and runny nose</Title>\r\n                    </Col>\r\n                    <Col style={{textAlign: \"center\", marginTop: \"30px\"}} xs={{span: 16, offset: 4}}\r\n                         sm={{span: 24}} md={{span: 7, offset: 1}}\r\n                         lg={{span: 6}}>\r\n                        <img src=\"http://hpb.health.gov.lk/media/feature/9.png\" alt=\"\" style={{width: \"75%\"}}/>\r\n                        <Title level={3}>Difficulty in breathing</Title>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SymptomPanel;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport \"./PanelPage.css\";\r\nimport ContactPanel from \"../ContactPanel/ContactPanel\";\r\nimport CreditPanel from \"../../components/ImageCredit/ImageCredit\";\r\nimport SpreadPreventPanel from \"../SpreadPreventPanel/SpreadPreventPanel\";\r\nimport SymptomPanel from \"../SymptomsPanel/SymptomPanel\";\r\n\r\nconst PanelPage = () => {\r\n    return (\r\n        <Row className=\"panel-page\">\r\n            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 10}}>\r\n                <SymptomPanel/>\r\n            </Col>\r\n            <Col xs={{span: 24}} sm={{span: 24}} md={{span: 12, offset: 1}}>\r\n                <SpreadPreventPanel/>\r\n                <ContactPanel/>\r\n                <CreditPanel/>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PanelPage;\r\n","export function formatNumber(num) {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n}\r\n\r\nexport function normalizePatientData(districtData) {\r\n    const patientCounts = districtData.map(value => value.patient_count);\r\n    const max = Math.max(...patientCounts);\r\n    const min = Math.min(...patientCounts);\r\n\r\n    return patientCounts.map(value => {\r\n        return Math.round((value - min) / (max - min) * 3);\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\n\r\nconst {Text} = Typography;\r\n\r\nconst TreatmentCount = ({cumulative, treatment, type}) => {\r\n    return (\r\n        <div style={{marginBottom: \"20px\"}}>\r\n            <span className=\"cumulative-local\">{cumulative}</span>\r\n            <div>\r\n                <Text type=\"secondary\" className=\"cumulative-local-text\">{type} Treated</Text>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TreatmentCount;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Col, Pagination, Row, Tooltip, Typography } from \"antd\";\r\nimport { formatNumber } from \"../../utils/Numbers\";\r\nimport TreatmentCount from \"../TreatmentCount/TreatmentCount\";\r\n\r\nconst {Text} = Typography;\r\n\r\nconst HospitalGrid = ({data}) => {\r\n\r\n    const [index, setIndex] = useState(1);\r\n    const pageSize = 4;\r\n\r\n    const onchange = (val) => {\r\n        setIndex(val);\r\n    };\r\n\r\n    const displayData = [...data].slice((index - 1) * pageSize, index * pageSize);\r\n\r\n    return (\r\n        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 20}} style={{marginTop: \"25px\"}}>\r\n            <Pagination defaultCurrent={1} total={17} pageSize={pageSize} onChange={onchange}\r\n                        style={{marginBottom: \"10px\"}}/>\r\n            <Row>\r\n                {displayData && displayData.map(item => {\r\n                    const name = (item.hospital.name).replace(/^TH/g, \"Teaching Hospital\");\r\n                    const titleNode = <Tooltip placement=\"bottom\" title={name}>\r\n                        <Text>{name}</Text>\r\n                    </Tooltip>;\r\n\r\n                    const cumulativeLocal = formatNumber(item.cumulative_local);\r\n                    const treatmentLocal = formatNumber(item.treatment_local);\r\n                    const cumulativeForeign = formatNumber(item.cumulative_foreign);\r\n                    const treatmentForeign = formatNumber(item.treatment_foreign);\r\n\r\n                    return <Col key={item.hospital_id} xs={{span: 24}} sm={{span: 24}} md={{span: 5}}\r\n                                style={{marginRight: \"20px\", marginBottom: \"20px\"}}>\r\n                        <Card title={titleNode}>\r\n                            <TreatmentCount type=\"Local\" cumulative={cumulativeLocal}\r\n                                            treatment={treatmentLocal}/>\r\n                            <TreatmentCount type=\"Foreigners\" cumulative={cumulativeForeign}\r\n                                            treatment={treatmentForeign}/>\r\n                        </Card>\r\n                    </Col>;\r\n                })}\r\n            </Row>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default HospitalGrid;\r\n","import React from \"react\";\r\n\r\nconst LastUpdate = ({updated, style}) => {\r\n    return <div style={{...style, color: \"grey\", fontSize: \"1.2em !important\"}}>Last update on {updated}</div>;\r\n};\r\n\r\nexport default LastUpdate;\r\n","import React from \"react\";\r\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\r\nimport { Col } from \"antd\";\r\n\r\nconst TwitterWidget = () => {\r\n    return (\r\n        <Col xs={{span: 24}} md={{span: 4}}>\r\n            <div style={{border: \"1px solid #e6e6e6\"}}>\r\n                <TwitterTimelineEmbed\r\n                    sourceType=\"profile\"\r\n                    screenName=\"WHOWPRO\"\r\n                    options={{height: 400}}\r\n                />\r\n            </div>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default TwitterWidget;\r\n","import React from \"react\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport \"./HospitalPanel.css\";\r\nimport HospitalGrid from \"../../components/HospitalGrid/HospitalGrid\";\r\nimport LastUpdate from \"../../components/LastUpdate/LastUpdate\";\r\nimport TwitterWidget from \"../../components/TwitterWidget/TwitterWidget\";\r\nimport moment from \"moment\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst HospitalPanel = ({hospitalData, lastUpdatedAt}) => {\r\n    const formattedDate = moment(lastUpdatedAt, \"YYYY-MM-DD hh:mm:ss\", true).format(\"YYYY-MM-DD hh:mm A\");\r\n    return <Col xs={{span: 24}} sm={{span: 24}} md={{span: 24}} style={{marginTop: \"25px\"}}>\r\n        <div className=\"hospital-panel\">\r\n            <Title style={{marginTop: \"40px\", marginBottom: \"0\"}} level={2}>Current status of the hospitals -\r\n                treated or observed</Title>\r\n            <LastUpdate updated={formattedDate} style={{marginBottom: \"10px\"}}/>\r\n            <Row>\r\n                <HospitalGrid data={hospitalData}/>\r\n                <TwitterWidget/>\r\n            </Row>\r\n        </div>\r\n    </Col>;\r\n};\r\n\r\nexport default HospitalPanel;\r\n","import React from \"react\";\r\nimport { InfoCircleFilled } from \"@ant-design/icons\";\r\n\r\nconst Message = ({message, type, icon, children}) => {\r\n\r\n    let messageStyle = {\r\n        message: {\r\n            background: \"#357ae8\",\r\n            padding: \"10px 15px\",\r\n            color: \"white\",\r\n            borderRadius: \"10px\",\r\n            marginBottom: \"20px\",\r\n            minHeight: \"30px\"\r\n        },\r\n\r\n        messageData: {\r\n            paddingLeft: \"10px\"\r\n        }\r\n    };\r\n\r\n    if(type === \"light\") {\r\n        messageStyle = {\r\n            message: {\r\n                ...messageStyle.message,\r\n                background: \"#f0f0f0\",\r\n                color: \"black\",\r\n                border: \"1px solid #d9d9d9\"\r\n            },\r\n\r\n            messageData: {\r\n                ...messageStyle.messageData\r\n            }\r\n        };\r\n    }\r\n\r\n    return (\r\n        <div style={messageStyle.message}>\r\n            {\r\n                message ? <div style={{fontSize: \"1.2em\"}}>\r\n                    {icon && <InfoCircleFilled/>}\r\n                    <span style={messageStyle.messageData}>{message}</span>\r\n                </div> : <div>{children}</div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport { Col, Collapse, Typography } from \"antd\";\r\nimport Message from \"../Message/Message\";\r\n\r\nconst {Title, Text} = Typography;\r\nconst {Panel} = Collapse;\r\n\r\nconst QAPanel = () => {\r\n    return (\r\n        <Col xs={{span: 24, offset: 0}} sm={{span: 9, offset: 1}} md={{span: 9, offset: 1}}\r\n             lg={{span: 9, offset: 1}}>\r\n            <Title>Q&A on coronaviruses (COVID-19)</Title>\r\n            <Collapse defaultActiveKey={[\"\"]}>\r\n                <Panel header=\"What is a coronavirus?\" key=\"1\">\r\n                    <p>Coronaviruses are a large family of viruses which may cause illness in animals or\r\n                        humans. In humans, several coronaviruses are known to cause respiratory\r\n                        infections\r\n                        ranging from the common cold to more severe diseases such as Middle East\r\n                        Respiratory\r\n                        Syndrome (MERS) and Severe Acute Respiratory Syndrome (SARS). The most recently\r\n                        discovered coronavirus causes coronavirus disease COVID-19.</p>\r\n                </Panel>\r\n                <Panel header=\"What are the symptoms of COVID-19?\" key=\"2\">\r\n                    <p>The most common symptoms of COVID-19 are fever, tiredness, and dry cough. Some\r\n                        patients may have aches and pains, nasal congestion, runny nose, sore throat or\r\n                        diarrhea. These symptoms are usually mild and begin gradually. Some people\r\n                        become\r\n                        infected but don’t develop any symptoms and don't feel unwell. Most people\r\n                        (about\r\n                        80%) recover from the disease without needing special treatment. Around 1 out of\r\n                        every 6 people who gets COVID-19 becomes seriously ill and develops difficulty\r\n                        breathing. Older people, and those with underlying medical problems like high\r\n                        blood\r\n                        pressure, heart problems or diabetes, are more likely to develop serious\r\n                        illness.\r\n                        People with fever, cough and difficulty breathing should seek medical\r\n                        attention.</p>\r\n                </Panel>\r\n                <Panel header=\"How does COVID-19 spread?\" key=\"3\">\r\n                    <p>People can catch COVID-19 from others who have the virus. The disease can spread\r\n                        from\r\n                        person to person through small droplets from the nose or mouth which are spread\r\n                        when\r\n                        a person with COVID-19 coughs or exhales. These droplets land on objects and\r\n                        surfaces around the person. Other people then catch COVID-19 by touching these\r\n                        objects or surfaces, then touching their eyes, nose or mouth. People can also\r\n                        catch\r\n                        COVID-19 if they breathe in droplets from a person with COVID-19 who coughs out\r\n                        or\r\n                        exhales droplets. This is why it is important to stay more than 1 meter (3 feet)\r\n                        away from a person who is sick.\r\n\r\n                        WHO is assessing ongoing research on the ways COVID-19 is spread and will\r\n                        continue\r\n                        to share updated findings. </p>\r\n                </Panel>\r\n                <Panel header=\"Can the virus that causes COVID-19 be transmitted through the air?\"\r\n                       key=\"4\">\r\n                    <p>Studies to date suggest that the virus that causes COVID-19 is mainly transmitted\r\n                        through contact with respiratory droplets rather than through the air. See\r\n                        previous\r\n                        answer on “How does COVID-19 spread?”</p>\r\n                </Panel>\r\n                <Panel header=\"Can CoVID-19 be caught from a person who has no symptoms?\" key=\"5\">\r\n                    <p>The main way the disease spreads is through respiratory droplets expelled by\r\n                        someone\r\n                        who is coughing. The risk of catching COVID-19 from someone with no symptoms at\r\n                        all\r\n                        is very low. However, many people with COVID-19 experience only mild symptoms.\r\n                        This\r\n                        is particularly true at the early stages of the disease. It is therefore\r\n                        possible to\r\n                        catch COVID-19 from someone who has, for example, just a mild cough and does not\r\n                        feel ill. WHO is assessing ongoing research on the period of transmission of\r\n                        COVID-19 and will continue to share updated findings. </p>\r\n                </Panel>\r\n                <Panel header=\"Can I catch COVID-19 from the feces of someone with the disease?\"\r\n                       key=\"6\">\r\n                    <p>The risk of catching COVID-19 from the feces of an infected person appears to be\r\n                        low.\r\n                        While initial investigations suggest the virus may be present in feces in some\r\n                        cases, spread through this route is not a main feature of the outbreak. WHO is\r\n                        assessing ongoing research on the ways COVID-19 is spread and will continue to\r\n                        share\r\n                        new findings. Because this is a risk, however, it is another reason to clean\r\n                        hands\r\n                        regularly, after using the bathroom and before eating. </p>\r\n                </Panel>\r\n                <Panel header=\"Is there a vaccine, drug or treatment for COVID-19?\" key=\"7\">\r\n                    <p>Not yet. To date, there is no vaccine and no specific antiviral medicine to\r\n                        prevent\r\n                        or treat COVID-2019. However, those affected should receive care to relieve\r\n                        symptoms. People with serious illness should be hospitalized. Most patients\r\n                        recover\r\n                        thanks to supportive care.\r\n\r\n                        Possible vaccines and some specific drug treatments are under investigation.\r\n                        They\r\n                        are being tested through clinical trials. WHO is coordinating efforts to develop\r\n                        vaccines and medicines to prevent and treat COVID-19.\r\n\r\n                        The most effective ways to protect yourself and others against COVID-19 are to\r\n                        frequently clean your hands, cover your cough with the bend of elbow or tissue,\r\n                        and\r\n                        maintain a distance of at least 1 meter (3 feet) from people who are coughing or\r\n                        sneezing. (See Basic protective measures against the new coronavirus). </p>\r\n                </Panel>\r\n                <Panel header=\"Is COVID-19 the same as SARS?\" key=\"8\">\r\n                    <p>No. The virus that causes COVID-19 and the one that caused the outbreak of Severe\r\n                        Acute Respiratory Syndrome (SARS) in 2003 are related to each other genetically,\r\n                        but\r\n                        the diseases they cause are quite different.\r\n\r\n                        SARS was more deadly but much less infectious than COVID-19. There have been no\r\n                        outbreaks of SARS anywhere in the world since 2003.</p>\r\n                </Panel>\r\n                <Panel header=\"How long does the virus survive on surfaces?\" key=\"9\">\r\n                    <p>It is not certain how long the virus that causes COVID-19 survives on surfaces,\r\n                        but\r\n                        it seems to behave like other coronaviruses. Studies suggest that coronaviruses\r\n                        (including preliminary information on the COVID-19 virus) may persist on\r\n                        surfaces\r\n                        for a few hours or up to several days. This may vary under different conditions\r\n                        (e.g. type of surface, temperature or humidity of the environment).\r\n\r\n                        If you think a surface may be infected, clean it with simple disinfectant to\r\n                        kill\r\n                        the virus and protect yourself and others. Clean your hands with an\r\n                        alcohol-based\r\n                        hand rub or wash them with soap and water. Avoid touching your eyes, mouth, or\r\n                        nose.</p>\r\n                </Panel>\r\n            </Collapse>\r\n            <div style={{marginTop: \"10px\"}}><Text>For more details check <a\r\n                href=\"https://www.who.int/news-room/q-a-detail/q-a-coronaviruses\">this link.</a></Text>\r\n            </div>\r\n            <div style={{marginTop: \"20px\"}}>\r\n                <Message display={true}\r\n                         icon={true}\r\n                         type=\"light\"\r\n                         message={\"An outbreak of pneumonia of unknown reason was first reported on 31st December 2019 from Wuhan City in Hubei Province of China. On 7 th Jan 2020, it was diagnosed as “Novel Corona Virus”. On 30th Jan 2020, World Health Organization has declared it as a Public Health Emergency of International Concern (PHEIC). On 11/02/2020 the WHO has introduced a short form for the diseases as COVID-19 and on 11/03/2020 declared as pandemic. The incubation period is reported as 2-14 days.\"}/>\r\n            </div>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default QAPanel;\r\n","import React from \"react\";\r\n\r\nimport { Tooltip, Typography } from \"antd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./card.css\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Card = ({title, value, icon, newStatus, style}) => {\r\n\r\n    return (\r\n        <div className=\"card\" style={{background: style}}>\r\n            <div><FontAwesomeIcon style={{color: \"white\"}} icon={icon} size=\"2x\"/></div>\r\n            <Title className=\"card-title\" level={3}>{title}</Title>\r\n            <Title className={`card-status`}>{value}</Title>\r\n\r\n            <div className=\"status-data\">\r\n                {newStatus && value !== \"0\" &&\r\n                <Tooltip placement=\"bottom\" title={newStatus.toLowerCase() + \" within past 24 hours\"}>\r\n                    <p className=\"new-status-text\">{newStatus}</p>\r\n                </Tooltip>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Col, Radio, Row, Typography } from \"antd\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport { formatNumber } from \"../../utils/Numbers\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport \"./CardPanel.css\";\r\n\r\nconst {Title} = Typography;\r\n\r\nconst CardPanel = ({lastUpdate, cardData, onChange}) => {\r\n\r\n    return (\r\n        <Col xs={{span: 24, offset: 0}} sm={{span: 14}} md={{span: 14}}\r\n             lg={{span: 14}}>\r\n            <div className=\"last-sync\" style={{fontWeight: \"600\"}}>Last updated</div>\r\n            <Title className=\"last-sync\" level={2}>\r\n                <Moment format=\"YYYY MMMM DD hh:mm A\">{lastUpdate}</Moment>\r\n            </Title>\r\n            <div className=\"action\">\r\n                <Radio.Group style={{textAlign: \"center\"}} onChange={onChange} defaultValue={true}\r\n                             buttonStyle=\"solid\" size=\"large\">\r\n                    <Radio.Button value={true}>Local</Radio.Button>\r\n                    <Radio.Button value={false}>Global</Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <Row>\r\n                {\r\n                    cardData.main.map(item => {\r\n                        const value = formatNumber(item.value);\r\n                        return <Col key={item.style} xs={{span: 24, offset: 0}} sm={{span: 6}}\r\n                                    md={{span: 8, offset: 0}}>\r\n                            <Card title={item.text} value={value}\r\n                                  newStatus={item.newText} icon={item.icon} style={item.style}/>\r\n                        </Col>\r\n                    })\r\n                }\r\n            </Row>\r\n            <Row>\r\n                <Col xs={{span: 24, offset: 0}} sm={{span: 6}} md={{span: 8, offset: 0}}>\r\n                    <div style={{width: \"90%\", margin: \"auto\"}}>\r\n                        <Message type=\"light\" style={{fontsize: \"1em\"}}>\r\n                            <div className=\"card-info\">\r\n                                <div className=\"card-info-title\">\r\n                                    Suspected or Confirmed COVID-19 cases currently in hospitals\r\n                                </div>\r\n                                <div className=\"card-info-data\">\r\n                                    {cardData.inHospital}\r\n                                </div>\r\n                                <div style={{\r\n                                    color: \"grey\",\r\n                                    height: \"25px\"\r\n                                }}/>\r\n                            </div>\r\n                        </Message>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={{span: 24, offset: 0}} sm={{span: 6}} md={{span: 8, offset: 0}}>\r\n                    <div style={{width: \"90%\", margin: \"auto\"}}>\r\n                        <Message type=\"light\" style={{fontsize: \"1em\"}}>\r\n                            <div className=\"card-info\">\r\n                                <div className=\"card-info-title\">\r\n                                    Patients in quarantine centers\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"card-info-data\">\r\n                                        {cardData.other.quarantine_centers}\r\n                                    </div>\r\n                                    <div style={{\r\n                                        color: \"grey\",\r\n                                        height: \"25px\"\r\n                                    }}>{cardData.other.foreigners} foreigners included\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Message>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={{span: 24, offset: 0}} sm={{span: 6}} md={{span: 8, offset: 0}}>\r\n                    <div style={{width: \"90%\", margin: \"auto\"}}>\r\n                        <Message type=\"light\" style={{fontsize: \"1em\"}}>\r\n                            <div className=\"card-info\">\r\n                                <div className=\"card-info-title\">\r\n                                    Number of countries affected with COVID-19\r\n                                </div>\r\n                                <div className=\"card-info-data\">\r\n                                    {cardData.countries}\r\n                                </div>\r\n                                <div style={{\r\n                                    color: \"grey\",\r\n                                    height: \"25px\"\r\n                                }}/>\r\n                            </div>\r\n                        </Message>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CardPanel;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport \"./DistrictGrid.css\";\r\n\r\nconst DistrictGrid = ({data}) => {\r\n\r\n    const southern = [];\r\n    const central = [];\r\n    const northern = [];\r\n\r\n\r\n    data.forEach(value => {\r\n        if(value.province === \"Southern Province\") {\r\n            southern.push(value);\r\n        } else if(value.province === \"Central Province\") {\r\n            central.push(value);\r\n        } else if(value.province === \"Northern Province\") {\r\n            northern.push(value);\r\n        } \r\n    });\r\n\r\n    const provincialData = {\r\n    \r\n        \"Northern\": northern,\r\n        \"Central\": central,\r\n        \"Southern\": southern,\r\n        \r\n        \r\n    };\r\n\r\n    return (\r\n        <div style={{marginTop: \"30px\"}}>\r\n            <Row>\r\n                {\r\n                    Object.entries(provincialData).map(value => {\r\n                        return <Col className=\"province\" key={value[0]} xs={{span: 24}} sm={{span: 24}}\r\n                                    md={{span: 8}}>\r\n                            <div className=\"district-list\">\r\n                                <div className=\"province-title\">\r\n                                    <span>{value[0]}</span>\r\n                                </div>\r\n                                <Row>\r\n                                    {value[1].map(data => <Col className=\"district-item\" key={data.name} span={8}>\r\n                                        <div\r\n                                            className={`district-card ${data.patient_count === 0 ? \" opacity\" : \"\"}`}>\r\n                                            <div className=\"district-name\">\r\n                                                {data.name.replace(/\\b\\w/, v => v.toUpperCase())}\r\n                                            </div>\r\n                                            <div className=\"district-value\">\r\n                                                <div className=\"district-value\" level={1}>{data.patient_count}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>)}\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                    })\r\n                }\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistrictGrid;\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\nimport DistrictGrid from \"../../components/DistrictGrid/DistrictGrid\";\r\nimport \"./DistrictPanel.css\"\r\nimport LastUpdate from \"../../components/LastUpdate/LastUpdate\";\r\n\r\nconst DistrictPanel = ({districtData, updatedDate}) => {\r\n\r\n    return <Col span={24}>\r\n        <div style={{width: \"100%\", marginTop: \"40px\"}}>\r\n            <div><span\r\n                className=\"country-data-title\">The district based distribution of the COVID-19 confirmed cases</span>\r\n            </div>\r\n            <LastUpdate updated={updatedDate}/>\r\n        </div>\r\n        <Col span={24}>\r\n            <DistrictGrid data={districtData}/>\r\n        </Col>\r\n    </Col>;\r\n};\r\n\r\nexport default DistrictPanel;\r\n","import React, { useState } from \"react\";\r\nimport \"./MapPanel.css\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Col, Tooltip } from \"antd\";\r\nimport LastUpdate from \"../../components/LastUpdate/LastUpdate\";\r\nimport { normalizePatientData } from \"../../utils/Numbers\";\r\n\r\nconst DistrictData = ({color, index, name, value}) => {\r\n    return index > 0 ? <Tooltip title={value} placement={\"left\"}>\r\n        <div style={{\r\n            background: \"white\",\r\n            borderRadius: \"10px\",\r\n            padding: `5px 10px`,\r\n            fontSize: \"1.1em\",\r\n            display: \"inline-flex\",\r\n            fontWeight: \"600\",\r\n            color: \"#464545\",\r\n            border: \"1.3px solid #333333\"\r\n        }}>\r\n            <div style={{background: `${color}`, width: \"15px\", height: \"15px\"}}/>\r\n            <span style={{paddingLeft: \"10px\"}}>{name}</span>\r\n        </div>\r\n    </Tooltip> : <div/>;\r\n};\r\n\r\nconst DistrictMapPanel = ({districtData, updatedDate}) => {\r\n\r\n    const [center] = useState({lat: 17.892786, lng: 103.9767120});\r\n    const [zoom] = useState(7);\r\n\r\n    const COLORS = [\"\", \"#ffb700\", \"#ff6d00\", \"#FF0015\"];\r\n\r\n    const patientCountsNormalized = normalizePatientData(districtData);\r\n\r\n    const districtColors = patientCountsNormalized.map(value => COLORS[value]);\r\n\r\n    return (\r\n        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 8}}>\r\n            <div style={{marginTop: \"40px\"}}>\r\n                <div><span className=\"country-data-title\">The districts reported with the highest number of the COVID-19 confirmed cases</span>\r\n                </div>\r\n                <LastUpdate updated={updatedDate}/>\r\n                <div style={{height: \"800px\", width: \"100%\", margin: \"auto\", marginTop: \"30px\"}}>\r\n                    <GoogleMapReact\r\n                        draggable={true}\r\n                        bootstrapURLKeys={{key: \"AIzaSyDBDjhvU2jmLhsnzPgwuM6pDvXieaRt654\"}}\r\n                        defaultCenter={center}\r\n                        defaultZoom={zoom}\r\n                        yesIWantToUseGoogleMapApiInternals\r\n                    >\r\n                        {districtData.map((data, i) => {\r\n                            return <DistrictData key={data.name} lat={data.geoLocation.lat}\r\n                                                 lng={data.geoLocation.lng}\r\n                                                 index={patientCountsNormalized[i]}\r\n                                                 name={data.name} value={data.patient_count}\r\n                                                 color={districtColors[i]}/>;\r\n                        })}\r\n                    </GoogleMapReact>\r\n                </div>\r\n            </div>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default DistrictMapPanel;\r\n","import React from \"react\";\r\nimport { LineChart } from \"@opd/g2plot-react\";\r\nimport LastUpdate from \"../LastUpdate/LastUpdate\";\r\nimport { Col } from \"antd\";\r\n\r\nconst PatientChart = ({data, updatedAt}) => {\r\n\r\n    const config = {\r\n        height: 400,\r\n        title: {\r\n            visible: false\r\n        },\r\n        description: {\r\n            visible: false\r\n        },\r\n        padding: \"auto\",\r\n        forceFit: true,\r\n        xField: \"date\",\r\n        yField: \"confirmed\",\r\n        label: {\r\n            visible: false,\r\n            type: \"point\",\r\n        },\r\n        style: {\r\n            width: \"100%\"\r\n        },\r\n        point: {\r\n            visible: true,\r\n            size: 5,\r\n        },\r\n        xAxis: {\r\n            tickCount: 10,\r\n        },\r\n        data,\r\n    };\r\n\r\n    return (\r\n        <Col span={24} style={{marginTop: \"40px\"}}>\r\n            <div className=\"country-data-title\">The daily distribution of the COVID-19 confirmed\r\n                cases\r\n            </div>\r\n            <LastUpdate updated={updatedAt}/>\r\n            <LineChart {...config} />\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default PatientChart;\r\n","import React from \"react\";\r\nimport { ColumnChart } from \"@opd/g2plot-react\";\r\nimport { Col } from \"antd\";\r\nimport LastUpdate from \"../LastUpdate/LastUpdate\";\r\n\r\nconst AgeChart = ({data, updatedAt}) => {\r\n\r\n    const config = {\r\n        title: {\r\n            visible: false\r\n        },\r\n        data: [...data],\r\n        padding: \"auto\",\r\n        xField: \"age\",\r\n        yField: \"count\",\r\n        yAxis: {\r\n            visible: false\r\n        },\r\n        color: \"#ff8f2f\",\r\n        meta: {\r\n            age: {\r\n                alias: \"Age Range\",\r\n            },\r\n            count: {\r\n                formatter: (v) => {\r\n                    if(v) {\r\n                        return `${v}%`\r\n                    }\r\n                    return \"\";\r\n                }\r\n            }\r\n        },\r\n        label: {\r\n            visible: true,\r\n            style: {\r\n                fill: \"#0D0E68\",\r\n                fontSize: 12,\r\n                fontWeight: 600,\r\n                opacity: 0.6,\r\n            },\r\n        },\r\n        tooltip: {\r\n            visible: false\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Col span={24} style={{marginTop: \"40px\"}}>\r\n            <div className=\"country-data-title\">The age based distribution of the COVID-19 confirmed\r\n                cases\r\n            </div>\r\n            <LastUpdate updated={updatedAt}/>\r\n            <ColumnChart {...config}/>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default AgeChart;\r\n","import React from \"react\";\r\nimport { PieChart } from \"@opd/g2plot-react\";\r\nimport LastUpdate from \"../LastUpdate/LastUpdate\";\r\nimport { Col } from \"antd\";\r\n\r\nconst GenderChart = ({chartData, updatedAt}) => {\r\n\r\n    const config = {\r\n        forceFit: true,\r\n        title: {\r\n            visible: false\r\n        },\r\n        description: {\r\n            visible: false,\r\n            text: \"\"\r\n        },\r\n        radius: 0.85,\r\n        data: chartData,\r\n        responsive: true,\r\n        yField: \"type\",\r\n        angleField: \"value\",\r\n        colorField: \"type\",\r\n        label: {\r\n            visible: true,\r\n            style: {\r\n                color: \"white\",\r\n                fontSize: \"1.1em\"\r\n            },\r\n            type: \"spider\",\r\n            formatter: (v) => {\r\n                return v + \"%\"\r\n            }\r\n        },\r\n        legend: {\r\n            visible: true,\r\n            offsetX: 0\r\n        },\r\n    };\r\n\r\n    return <Col span={24} style={{marginTop: \"40px\"}}>\r\n        <div style={{width: \"95%\", margin: \"auto\"}}>\r\n            <div className=\"country-data-title\">The gender based distribution of the COVID-19 confirmed\r\n                cases\r\n            </div>\r\n            <LastUpdate updated={updatedAt}/>\r\n            <PieChart {...config} />\r\n        </div>\r\n    </Col>\r\n};\r\n\r\nexport default GenderChart;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport PatientChart from \"../../components/PatientChart/PatientChart\";\r\nimport AgeChart from \"../../components/AgeChart/AgeChart\";\r\nimport GenderChart from \"../../components/GenderChart/GenderChart\";\r\n\r\nconst ChartPanel = ({patientChartData, ageChartData, patientDataUpdatedAt, ageDataUpdatedAt, genderChartData}) => {\r\n\r\n    return (\r\n        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 15}}>\r\n            <Row>\r\n                <PatientChart data={patientChartData} updatedAt={patientDataUpdatedAt}/>\r\n                <Col span={24}>\r\n                    <Row>\r\n                        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 12}}>\r\n                            <AgeChart data={ageChartData} updatedAt={ageDataUpdatedAt}/>\r\n                        </Col>\r\n                        <Col xs={{span: 24}} sm={{span: 24}} md={{span: 12}}>\r\n                            <GenderChart chartData={genderChartData} updatedAt={ageDataUpdatedAt}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n};\r\n\r\nexport default ChartPanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { BackTop, Layout, Result, Row, Spin, Typography } from \"antd\";\r\nimport { faAmbulance, faBed, faWalking } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DEATHS, GLOBAL_RECOVERED, LOCAL_RECOVERED, NEW_CASES, NEW_DEATHS, TOTAL_CASES } from \"./utils/Strings\";\r\nimport PanelPage from \"./Pages/PanelPage/PanelPage\";\r\nimport HospitalPanel from \"./Pages/HospitalPanel/HospitalPanel\";\r\nimport QAPanel from \"./components/QAPanel/QAPanel\";\r\nimport CardPanel from \"./Pages/CardPanel/CardPanel\";\r\nimport { formatNumber } from \"./utils/Numbers\";\r\nimport moment from \"moment\";\r\nimport DistrictPanel from \"./Pages/DistrictPanel/DistrictPanel\";\r\nimport DistrictMapPanel from \"./Pages/DistrictMapPanel/DistrictMapPanel\";\r\nimport ChartPanel from \"./Pages/ChartPanel/ChartPanel\";\r\n\r\nconst {Header, Content, Footer} = Layout;\r\nconst {Title, Text} = Typography;\r\n\r\nfunction App() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setError] = useState(false);\r\n    const [isErrorCountryData, setErrorCountryData] = useState(false);\r\n    const [isLocal, setIsLocal] = useState(true);\r\n    const [state, setState] = useState({\r\n        update_date_time: \"\",\r\n        local_new_cases: 0,\r\n        local_total_cases: 0,\r\n        local_deaths: 0,\r\n        local_new_deaths: 0,\r\n        local_recovered: 0,\r\n        local_total_number_of_individuals_in_hospitals: 0,\r\n        global_new_cases: 0,\r\n        global_total_cases: 0,\r\n        global_deaths: 0,\r\n        global_new_deaths: 0,\r\n        global_recovered: 0,\r\n    });\r\n    const [hospitalData, setHospitalData] = useState([]);\r\n    const [patientChartData, setPatientChartData] = useState([]);\r\n    const [districtData, setDistrictData] = useState([]);\r\n    const [otherData, setOtherData] = useState({});\r\n    const [countryDataUpdatedDate, setCountryDataUpdatedDate] = useState(\"\");\r\n    const [byGenderData, setByGenderData] = useState([]);\r\n    const [countriesReported, setCountriesReported] = useState(0);\r\n    const [ageChartData, setAgeChartData] = useState([]);\r\n    const [patientDataUpdatedAt, setPatientDataUpdatedAt] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchData(fetchCountryData);\r\n    }, []);\r\n\r\n    const fetchCountryData = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await fetch(`http://119.59.103.158/api/status`);\r\n\r\n            if(!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n\r\n            const json = await response.json();\r\n            const data = json.data;\r\n\r\n            setDistrictData(data.district_data);\r\n            setOtherData(data.other_data);\r\n            setCountryDataUpdatedDate(data.updated_at.replace(/.00/, \" \").toUpperCase());\r\n\r\n            const genderData = Object.entries(data.by_gender).map(value => {\r\n                return {\r\n                    type: value[0],\r\n                    value: value[1]\r\n                }\r\n            });\r\n\r\n            setByGenderData(genderData);\r\n            setCountriesReported(data.countries_reported);\r\n            setIsLoading(false);\r\n            setErrorCountryData(false);\r\n\r\n            const chartData = data.by_age.map(ageData => {\r\n                const age = Object.keys(ageData)[0];\r\n                const count = ageData[age];\r\n                return {\r\n                    age: age,\r\n                    count: +count\r\n                }\r\n            });\r\n\r\n            setAgeChartData(chartData);\r\n        } catch(e) {\r\n            setErrorCountryData(true);\r\n        }\r\n    };\r\n\r\n    const fetchData = async (callback) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const response = await fetch(\"http://119.59.103.158/api/get-current-statistical\");\r\n            if(!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            const json = await response.json();\r\n            const data = json.data;\r\n\r\n            setState({\r\n                ...state,\r\n                update_date_time: data.update_date_time,\r\n                local_new_cases: data.local_new_cases,\r\n                local_total_cases: data.local_total_cases,\r\n                local_deaths: data.local_deaths,\r\n                local_new_deaths: data.local_new_deaths,\r\n                local_total_number_of_individuals_in_hospitals: data.local_total_number_of_individuals_in_hospitals,\r\n                local_recovered: data.local_recovered,\r\n                global_new_cases: data.global_new_cases,\r\n                global_total_cases: data.global_total_cases,\r\n                global_deaths: data.global_deaths,\r\n                global_new_deaths: data.global_new_deaths,\r\n                global_recovered: data.global_recovered\r\n            });\r\n\r\n            await fetch(\"https://pomber.github.io/covid19/timeseries.json\")\r\n                .then(response => response.json())\r\n                .then(val => {\r\n\r\n                    const sriLankaData = [...val[\"Sri Lanka\"]];\r\n                    const chartData = sriLankaData.map(obj => {\r\n                        const date = moment();\r\n                        const objDate = moment(obj.date, \"YYYY-M-DD\", true);\r\n                        if(obj.recovered >= 2 && objDate.isBefore(date) && obj.recovered > data.local_recovered) {\r\n                            return {...obj, \"confirmed\": obj.confirmed - 1};\r\n                        }\r\n                        return obj;\r\n                    });\r\n\r\n                    const lastItem = [...sriLankaData].splice(-1, 1);\r\n                    const updatedAt = (lastItem && lastItem.length > 0) ? lastItem[0].date : \"\";\r\n\r\n                    setPatientDataUpdatedAt(moment(updatedAt, \"YYYY-M-DD\", true).format(\"YYYY-MM-DD\"));\r\n                    setPatientChartData(chartData);\r\n                }).catch(_ => setError(true));\r\n\r\n            setHospitalData([...hospitalData, ...data.hospital_data]);\r\n            setIsLoading(false);\r\n            setError(false);\r\n\r\n            callback();\r\n        } catch(error) {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    function onChange(value) {\r\n        setIsLocal(value.target.value);\r\n    }\r\n\r\n    const getStatusText = (value, text) => {\r\n        const val = formatNumber(value);\r\n        return val + \" \" + text;\r\n    };\r\n\r\n    const cases = {\r\n        text: TOTAL_CASES,\r\n        value: isLocal ? state.local_total_cases : state.global_total_cases,\r\n        newText: isLocal ? getStatusText(state.local_new_cases, NEW_CASES) : getStatusText(state.global_new_cases, NEW_CASES),\r\n        icon: faAmbulance,\r\n        style: \"#ff4d4f\"\r\n    };\r\n\r\n    const deaths = {\r\n        text: DEATHS,\r\n        value: isLocal ? state.local_deaths : state.global_deaths,\r\n        newText: isLocal ? getStatusText(state.local_new_deaths, NEW_DEATHS) : getStatusText(state.global_new_deaths, NEW_DEATHS),\r\n        icon: faBed,\r\n        style: \"#ff8f2f\"\r\n    };\r\n\r\n    const recovered = {\r\n        text: isLocal ? LOCAL_RECOVERED : GLOBAL_RECOVERED,\r\n        value: isLocal ? state.local_recovered : state.global_recovered,\r\n        icon: faWalking,\r\n        style: \"#52c41a\"\r\n    };\r\n\r\n    const data = {\r\n        main: [cases, deaths, recovered],\r\n        inHospital: state.local_total_number_of_individuals_in_hospitals,\r\n        countries: countriesReported,\r\n        other: otherData\r\n    };\r\n\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <BackTop/>\r\n            <Header>\r\n                <Title level={3} className=\"logo\">COVID-19 Laos Tracker</Title>\r\n            </Header>\r\n            <Content className=\"content\">\r\n                {isLoading && <div className=\"spin-root\">\r\n                    <Spin size=\"large\" className=\"spin-load\"/>\r\n                </div>}\r\n                {!isLoading && <div>\r\n                    {!isError && <div>\r\n                        <Row className=\"card-list\">\r\n                            <CardPanel cardData={data} onChange={onChange} lastUpdate={state.update_date_time}/>\r\n                            <QAPanel/>\r\n                        </Row>\r\n                        {!isErrorCountryData && <div>\r\n                            <Row justify=\"space-around\">\r\n                                <ChartPanel ageChartData={ageChartData} patientChartData={patientChartData}\r\n                                            hospitalData={hospitalData}\r\n                                            patientDataUpdatedAt={patientDataUpdatedAt}\r\n                                            ageDataUpdatedAt={countryDataUpdatedDate} genderChartData={byGenderData}/>\r\n                                <DistrictMapPanel districtData={districtData} updatedDate={countryDataUpdatedDate}/>\r\n                            </Row>\r\n                            <Row>\r\n                                <DistrictPanel districtData={districtData} updatedDate={countryDataUpdatedDate}/>\r\n                            </Row>\r\n                        </div>}\r\n                        {isErrorCountryData && <Row>\r\n                            <Text>Unable to display country based analysis at this moment.</Text>\r\n                        </Row>}\r\n                        <Row>\r\n                            <HospitalPanel hospitalData={hospitalData}\r\n                                           admitted={state.local_total_number_of_individuals_in_hospitals}\r\n                                           lastUpdatedAt={state.update_date_time}/>\r\n                        </Row>\r\n                        <Row>\r\n                            <PanelPage/>\r\n                        </Row>\r\n                    </div>}\r\n\r\n                    {isError && <Result\r\n                        status=\"500\"\r\n                        title=\"An unexpected error occurred\"\r\n                        subTitle=\"We will be back soon. Please try again in few minutes.\"\r\n                    />}\r\n                </div>}\r\n\r\n            </Content>\r\n            \r\n           \r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export const TOTAL_CASES = \"Total Cases\";\r\nexport const DEATHS = \"Deaths\";\r\nexport const LOCAL_RECOVERED = \"Recovered & Discharged\";\r\nexport const GLOBAL_RECOVERED = \"Recovered\";\r\nexport const NEW_CASES = \"New Cases\";\r\nexport const NEW_DEATHS = \"New Deaths\";\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}